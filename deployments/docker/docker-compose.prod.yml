version: '3.8'

services:
  odin:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile.prod
    restart: always
    ports:
      - '8080:8080'
      - '8081:8081'
    volumes:
      - ../../config:/app/config:ro
    environment:
      - LOG_LEVEL=info
      - REDIS_HOST=redis
    depends_on:
      - redis
    healthcheck:
      test: ['CMD', 'wget', '-q', '-O-', 'http://localhost:8080/health']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ../../monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - '9090:9090'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - ../../monitoring/grafana:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
