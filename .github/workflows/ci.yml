name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go mod download
          go mod tidy

      - name: Run tests
        run: go test -v ./...

      - name: Run tests with coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go mod download
          go mod tidy

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          skip-cache: true

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build
        run: go build -v ./...

      - name: Build binary
        run: go build -o bin/odin cmd/odin/main.go

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: odin-binary
          path: bin/odin
